// <auto-generated />
using System;
using Chilling.Goods.Api.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Chilling.Goods.Api.Data.Migrations
{
    [DbContext(typeof(GoodsDbContext))]
    [Migration("20220904165028_Migration_0.0.1")]
    partial class Migration_001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Chilling.Goods.Api.Data.Models.BrandDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Brand", (string)null);
                });

            modelBuilder.Entity("Chilling.Goods.Api.Data.Models.CatalogDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Catalog", (string)null);
                });

            modelBuilder.Entity("Chilling.Goods.Api.Data.Models.ProductTypeBrandConventionDbo", b =>
                {
                    b.Property<Guid>("ProductTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uuid");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("ProductTypeId", "BrandId");

                    b.HasIndex("BrandId");

                    b.ToTable("ProducTypeBrands", (string)null);
                });

            modelBuilder.Entity("Chilling.Goods.Api.Data.Models.ProductTypeDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CatalogId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CatalogId");

                    b.ToTable("ProductType", (string)null);
                });

            modelBuilder.Entity("Chilling.Goods.Api.Data.Models.ProductTypeBrandConventionDbo", b =>
                {
                    b.HasOne("Chilling.Goods.Api.Data.Models.BrandDbo", "Brand")
                        .WithMany("ProductTypes")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chilling.Goods.Api.Data.Models.ProductTypeDbo", "ProductType")
                        .WithMany("Brands")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("Chilling.Goods.Api.Data.Models.ProductTypeDbo", b =>
                {
                    b.HasOne("Chilling.Goods.Api.Data.Models.CatalogDbo", "Catalog")
                        .WithMany("ProductTypes")
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalog");
                });

            modelBuilder.Entity("Chilling.Goods.Api.Data.Models.BrandDbo", b =>
                {
                    b.Navigation("ProductTypes");
                });

            modelBuilder.Entity("Chilling.Goods.Api.Data.Models.CatalogDbo", b =>
                {
                    b.Navigation("ProductTypes");
                });

            modelBuilder.Entity("Chilling.Goods.Api.Data.Models.ProductTypeDbo", b =>
                {
                    b.Navigation("Brands");
                });
#pragma warning restore 612, 618
        }
    }
}
